openapi: 3.0.0
info:
  title: Node.js REST API Server
  version: 1.0.0
  description: A Node.js server interfacing with a PHP backend and MySQL database.
servers:
  - url: http://localhost:3000
paths:
  /register:
    post:
      summary: Registers a new user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User successfully registered.
        '400':
          description: Missing username or password.
        '409':
          description: Username already taken.
        '500':
          description: Server error.

  /login:
    post:
      summary: Logs in a user and returns a token.
      description: Authenticates a user with Basic Authentication and returns a JWT token.
      security:
        - basicAuth: []
      responses:
        '200':
          description: Successfully logged in. Returns a JWT token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token for authenticated sessions.
        '400':
          description: Username and password are required.
        '401':
          description: Invalid credentials.
        '500':
          description: Server error or login error.

  /devices:
    get:
      summary: Retrieves a list of devices.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of devices.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
        '401':
          description: Unauthorized.
        '500':
          description: Server error.
    post:
      summary: Creates a new device.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
      responses:
        '201':
          description: Device created.
        '401':
          description: Unauthorized.
        '500':
          description: Server error.

  /devices/{id}:
    get:
      summary: Retrieves a specific device by ID.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The device ID.
      responses:
        '200':
          description: Device details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        '401':
          description: Unauthorized.
        '404':
          description: Device not found.
        '500':
          description: Server error.
    put:
      summary: Updates a specific device by ID.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The device ID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
      responses:
        '200':
          description: Device updated.
        '401':
          description: Unauthorized.
        '404':
          description: Device not found.
        '500':
          description: Server error.
    delete:
      summary: Deletes a specific device by ID.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The device ID.
      responses:
        '200':
          description: Device deleted.
        '401':
          description: Unauthorized.
        '404':
          description: Device not found.
        '500':
          description: Server error.

components:
  schemas:
    Device:
      type: object
      properties:
        device_id:
          type: integer
          format: int64
          description: Unique identifier for the device
        device_type:
          type: string
          description: Type of the device
        device_name:
          type: string
          description: Name of the device
        status:
          type: string
          description: Current status of the device
      required:
        - device_type
        - device_name
        - status

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    basicAuth:
      type: http
      scheme: basic